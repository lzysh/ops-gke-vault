# gocd.yaml
---
format_version: 2
environments:
  pre-prod:
    pipelines:
      - vault-acc
      - vault-exp
  prod:
    pipelines:
      - vault-prod
pipelines:
  vault-acc:
    group: vault
    materials:
      git-ops-gke-vault:  # this is the name of material
        # type of material and url
        git: git@github.com:lzysh/ops-gke-vault.git
    environment_variables:
      GOOGLE_TOOLS_PROJECT: ops-tools-prod
    lock_behavior: unlockWhenFinished
    stages:
      - infra-plan:
          jobs:
            run:
              elastic_profile_id: k8s-gcloud-pre-prod
              tasks:
                - exec:
                    command: bash
                    working_directory: terraform
                    arguments:
                      - -c
                      - >-
                        terraform init
                        -backend-config="bucket=${GOOGLE_TOOLS_PROJECT}-pre-prod_tf_state"
                        -backend-config="project=${GOOGLE_TOOLS_PROJECT}"
                - exec:
                    command: bash
                    working_directory: terraform
                    arguments:
                      - -c
                      - >-
                        terraform workspace select shared-vault-infra-acc ||
                        terraform workspace new shared-vault-infra-acc
                - exec:
                    command: bash
                    working_directory: terraform
                    arguments:
                      - -c
                      - terraform plan
                        -out="plan.out"
                        -var-file="acc.tfvars"
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar cfvzp terraform.tar.gz terraform
              artifacts:
                - build:
                    source: terraform.tar.gz
                    destination: artifacts/
      - infra-apply:
          approval:
            type: manual
            roles:
              - vault-operator
          jobs:
            run:
              elastic_profile_id: k8s-gcloud-pre-prod
              tasks:
                - fetch:
                    pipeline: vault-acc
                    stage: infra-plan
                    job: run
                    is_file: "yes"
                    source: artifacts/terraform.tar.gz
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar xfvzp terraform.tar.gz
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - >-
                        gcloud auth activate-service-account
                        --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
                - exec:
                    command: bash
                    working_directory: terraform
                    arguments:
                      - -c
                      - terraform apply "plan.out"
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar cfvzp terraform.tar.gz terraform
              artifacts:
                - build:
                    source: terraform.tar.gz
                    destination: artifacts/

      - vault-plan:
          jobs:
            run:
              elastic_profile_id: k8s-gcloud-pre-prod
              tasks:
                - fetch:
                    pipeline: vault-acc
                    stage: infra-apply
                    job: run
                    is_file: "yes"
                    source: artifacts/terraform.tar.gz
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar xfvzp terraform.tar.gz
                - exec:
                    command: bash
                    working_directory: terraform/vault
                    arguments:
                      - -c
                      - >-
                        terraform init
                        -backend-config="bucket=${GOOGLE_TOOLS_PROJECT}-pre-prod_tf_state"
                        -backend-config="project=${GOOGLE_TOOLS_PROJECT}"
                - exec:
                    command: bash
                    working_directory: terraform/vault
                    arguments:
                      - -c
                      - >-
                        terraform workspace select shared-vault-acc ||
                        terraform workspace new shared-vault-acc
                - exec:
                    command: bash
                    working_directory: terraform/vault
                    arguments:
                      - -c
                      - >-
                        terraform plan
                        -out="plan.out"
                        -var="url=`cd ..;terraform output url`"
                        -var="root_token=`cd ..;terraform output root_token`"
                        -var="project=`cd ..;terraform output project`"
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar cfvzp terraform.tar.gz terraform
              artifacts:
                - build:
                    source: terraform.tar.gz
                    destination: artifacts/
      - vault-apply:
          approval:
            type: manual
            roles:
              - vault-operator
          jobs:
            run:
              elastic_profile_id: k8s-gcloud-pre-prod
              tasks:
                - fetch:
                    pipeline: vault-acc
                    stage: vault-plan
                    job: run
                    is_file: "yes"
                    source: artifacts/terraform.tar.gz
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar xfvzp terraform.tar.gz
                - exec:
                    command: bash
                    working_directory: terraform/vault
                    arguments:
                      - -c
                      - terraform apply "plan.out"
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar cfvzp terraform.tar.gz terraform
              artifacts:
                - build:
                    source: terraform.tar.gz
                    destination: artifacts/

      - smoke-test:
          jobs:
            run:
              elastic_profile_id: k8s-gcloud-pre-prod
              tasks:
                - fetch:
                    pipeline: vault-acc
                    stage: vault-apply
                    job: run
                    is_file: "yes"
                    source: artifacts/terraform.tar.gz
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar xfvzp terraform.tar.gz
                - exec:
                    command: bash
                    working_directory: test
                    arguments:
                      - -c
                      - ./smoke.sh


  vault-exp:
    group: vault
    materials:
      git-ops-gke-vault:  # this is the name of material
        # type of material and url
        git: git@github.com:lzysh/ops-gke-vault.git
      pipeline-vault-acc:
        pipeline: vault-acc
        stage: infra-apply
    environment_variables:
      GOOGLE_TOOLS_PROJECT: ops-tools-prod
    stages:
      - infra-plan:
          jobs:
            run:
              elastic_profile_id: k8s-gcloud-pre-prod
              tasks:
                - exec:
                    command: bash
                    working_directory: terraform
                    arguments:
                      - -c
                      - >-
                        terraform init
                        -backend-config="bucket=${GOOGLE_TOOLS_PROJECT}-pre-prod_tf_state"
                        -backend-config="project=${GOOGLE_TOOLS_PROJECT}"
                - exec:
                    command: bash
                    working_directory: terraform
                    arguments:
                      - -c
                      - >-
                        terraform workspace select
                        shared-vault-${GO_PIPELINE_COUNTER}-exp ||
                        terraform workspace new
                        shared-vault-${GO_PIPELINE_COUNTER}-exp

                - exec:
                    command: bash
                    working_directory: terraform
                    arguments:
                      - -c
                      - >-
                        terraform plan
                        -out="plan.out"
                        -var-file="exp.tfvars"
                        -var="host=vault-${GO_PIPELINE_COUNTER}"
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar cfvzp terraform.tar.gz terraform
              artifacts:
                - build:
                    source: terraform.tar.gz
                    destination: artifacts/
      - infra-apply:
          jobs:
            run:
              elastic_profile_id: k8s-gcloud-pre-prod
              tasks:
                - fetch:
                    pipeline: vault-exp
                    stage: infra-plan
                    job: run
                    is_file: "yes"
                    source: artifacts/terraform.tar.gz
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar xfvzp terraform.tar.gz
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - >-
                        gcloud auth activate-service-account
                        --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
                - exec:
                    command: bash
                    working_directory: terraform
                    arguments:
                      - -c
                      - terraform apply "plan.out"
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar cfvzp terraform.tar.gz terraform
              artifacts:
                - build:
                    source: terraform.tar.gz
                    destination: artifacts/

      - infra-destroy:
          # approval: manual
          jobs:
            run:
              elastic_profile_id: k8s-gcloud-pre-prod
              tasks:
                - fetch:
                    pipeline: vault-exp
                    stage: infra-apply
                    job: run
                    is_file: "yes"
                    source: artifacts/terraform.tar.gz
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar xfvzp terraform.tar.gz
                - exec:
                    command: bash
                    working_directory: terraform
                    arguments:
                      - -c
                      - >-
                        terraform destroy
                        -force
                        -var-file="exp.tfvars"
                        -var="host=vault-${GO_PIPELINE_COUNTER}"

  vault-prod:
    group: vault
    materials:
      git-ops-gke-vault:  # this is the name of material
        # type of material and url
        git: git@github.com:lzysh/ops-gke-vault.git
      pipeline-vault-acc:
        pipeline: vault-acc
        stage: smoke-test
    environment_variables:
      GOOGLE_TOOLS_PROJECT: ops-tools-prod
    lock_behavior: unlockWhenFinished
    stages:
      - infra-plan:
          jobs:
            run:
              elastic_profile_id: k8s-gcloud-prod
              tasks:
                - exec:
                    command: bash
                    working_directory: terraform
                    arguments:
                      - -c
                      - >-
                        terraform init
                        -backend-config="bucket=${GOOGLE_TOOLS_PROJECT}_tf_state"
                        -backend-config="project=${GOOGLE_TOOLS_PROJECT}"
                - exec:
                    command: bash
                    working_directory: terraform
                    arguments:
                      - -c
                      - terraform workspace select shared-vault-infra-prod ||
                        terraform workspace new shared-vault-infra-prod
                - exec:
                    command: bash
                    working_directory: terraform
                    arguments:
                      - -c
                      - terraform plan
                        -out="plan.out"
                        -var-file="prod.tfvars"
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar cfvzp terraform.tar.gz terraform
              artifacts:
                - build:
                    source: terraform.tar.gz
                    destination: artifacts/

      - infra-apply:
          approval:
            type: manual
            roles:
              - vault-operator
          jobs:
            run:
              elastic_profile_id: k8s-gcloud-prod
              tasks:
                - fetch:
                    pipeline: vault-prod
                    stage: infra-plan
                    job: run
                    is_file: "yes"
                    source: artifacts/terraform.tar.gz
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar xfvzp terraform.tar.gz
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - gcloud auth activate-service-account
                        --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
                - exec:
                    command: bash
                    working_directory: terraform
                    arguments:
                      - -c
                      - terraform apply "plan.out"
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar cfvzp terraform.tar.gz terraform
              artifacts:
                - build:
                    source: terraform.tar.gz
                    destination: artifacts/

      - vault-plan:
          jobs:
            run:
              elastic_profile_id: k8s-gcloud-prod
              tasks:
                - fetch:
                    pipeline: vault-prod
                    stage: infra-apply
                    job: run
                    is_file: "yes"
                    source: artifacts/terraform.tar.gz
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar xfvzp terraform.tar.gz
                - exec:
                    command: bash
                    working_directory: terraform/vault
                    arguments:
                      - -c
                      - >-
                        terraform init
                        -backend-config="bucket=${GOOGLE_TOOLS_PROJECT}_tf_state"
                        -backend-config="project=${GOOGLE_TOOLS_PROJECT}"
                - exec:
                    command: bash
                    working_directory: terraform/vault
                    arguments:
                      - -c
                      - >-
                        terraform workspace select shared-vault-prod ||
                        terraform workspace new shared-vault-prod
                - exec:
                    command: bash
                    working_directory: terraform/vault
                    arguments:
                      - -c
                      - >-
                        terraform plan
                        -out="plan.out"
                        -var="url=`cd ..;terraform output url`"
                        -var="root_token=`cd ..;terraform output root_token`"
                        -var="project=`cd ..;terraform output project`"
                        -var="skip_tls_verify=false"
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar cfvzp terraform.tar.gz terraform
              artifacts:
                - build:
                    source: terraform.tar.gz
                    destination: artifacts/
      - vault-apply:
          approval:
            type: manual
            roles:
              - vault-operator
          jobs:
            run:
              elastic_profile_id: k8s-gcloud-prod
              tasks:
                - fetch:
                    pipeline: vault-prod
                    stage: vault-plan
                    job: run
                    is_file: "yes"
                    source: artifacts/terraform.tar.gz
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar xfvzp terraform.tar.gz
                - exec:
                    command: bash
                    working_directory: terraform/vault
                    arguments:
                      - -c
                      - terraform apply "plan.out"
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar cfvzp terraform.tar.gz terraform
              artifacts:
                - build:
                    source: terraform.tar.gz
                    destination: artifacts/

      - smoke-test:
          jobs:
            run:
              elastic_profile_id: k8s-gcloud-prod
              tasks:
                - fetch:
                    pipeline: vault-prod
                    stage: vault-apply
                    job: run
                    is_file: "yes"
                    source: artifacts/terraform.tar.gz
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - tar xfvzp terraform.tar.gz
                - exec:
                    command: bash
                    working_directory: test
                    arguments:
                      - -c
                      - ./smoke.sh -p
